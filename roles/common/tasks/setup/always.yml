---
- name: Download {{ jetbrains_common_stylized_name }}
  become: true
  ansible.builtin.get_url:
    url: "{{ jetbrains_common_url }}"
    dest: /tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}.tar.gz
    mode: "0644"
    owner: root
    group: root

- name: Check if product info exists
  become: true
  ansible.builtin.stat:
    path: "/opt/{{ jetbrains_common_name }}/product-info.json"
  register: jetbrains_common_product_info

- name: Check if versions match
  when: jetbrains_common_product_info.stat.exists
  block:
    - name: Read product-info.json
      ansible.builtin.slurp:
        src: "/opt/{{ jetbrains_common_name }}/product-info.json"
      register: jetbrains_common_product_info_json

    - name: Parse product-info.json
      ansible.builtin.set_fact:
        jetbrains_common_installed_product_info_version: "{{ jetbrains_common_product_info_json['content'] | b64decode | from_json | json_query('version') }}"

    - name: Create temporary directory to compare versions
      become: true
      ansible.builtin.file:
        path: "/tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}"
        state: directory
        mode: "0755"
        owner: root
        group: root
      register: jetbrains_common_temporary_directory
      changed_when: "jetbrains_common_temporary_directory is changed and 'molecule-idempotence-notest' not in ansible_skip_tags"

    - name: Extract downloaded file
      become: true
      ansible.builtin.unarchive:
        src: /tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}.tar.gz
        dest: /tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}
        remote_src: true
        extra_opts:
          - --strip-components=1
      register: jetbrains_extract_temporary_directory
      changed_when: "jetbrains_extract_temporary_directory is changed and 'molecule-idempotence-notest' not in ansible_skip_tags"

    - name: Read product-info.json from downloaded file
      ansible.builtin.slurp:
        src: "/tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}/product-info.json"
      register: jetbrains_common_product_info_json

    - name: Parse product-info.json
      ansible.builtin.set_fact:
        jetbrains_common_new_product_info_version: "{{ jetbrains_common_product_info_json['content'] | b64decode | from_json | json_query('version') }}"

    - name: Update installation
      when: jetbrains_common_installed_product_info_version != jetbrains_common_new_product_info_version
      block:
        - name: Remove old installation
          become: true
          ansible.builtin.file:
            path: "/opt/{{ jetbrains_common_name }}"
            state: absent

        - name: Move temporary directory to permanent location
          become: true
          ansible.builtin.file:
            src: "/tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}"
            dest: "/opt/{{ jetbrains_common_name }}"
            state: directory
            mode: "0755"
            owner: root
            group: root

- name: Perform new install
  when: not jetbrains_common_product_info.stat.exists
  block:
    - name: Ensure application directory exists for {{ jetbrains_common_stylized_name }}
      become: true
      ansible.builtin.file:
        path: "/opt/{{ jetbrains_common_name }}"
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Extract {{ jetbrains_common_stylized_name }}
      become: true
      ansible.builtin.unarchive:
        src: /tmp/{{ jetbrains_common_name }}{{ jetbrains_common_edition }}-{{ jetbrains_common_version }}.tar.gz
        dest: /opt/{{ jetbrains_common_name }}
        remote_src: true
        extra_opts:
          - --strip-components=1

- name: Create desktop entry
  become: true
  ansible.builtin.template:
    src: "common.desktop.j2"
    dest: "/usr/share/applications/{{ jetbrains_common_name }}.desktop"
    mode: "0644"
    owner: root
    group: root

- name: Create shell script
  become: true
  ansible.builtin.template:
    src: "common.j2"
    dest: "/usr/local/bin/{{ jetbrains_common_name }}"
    mode: "0755"
    owner: root
    group: root

- name: Ensure plugins directory exists
  become: true
  become_user: "{{ jetbrains_common_plugins_user }}"
  ansible.builtin.file:
    path: "{{ jetbrains_common_plugin_directory }}"
    state: directory
    mode: "0750"
    owner: "{{ jetbrains_common_plugins_user }}"
    group: "{{ jetbrains_common_plugins_group }}"
  when: jetbrains_common_plugins | length > 0

- name: Import task to install plugin
  ansible.builtin.include_tasks: common/plugin.yml
  loop: "{{ jetbrains_common_plugins }}"
  loop_control:
    loop_var: jetbrains_common_plugin


...
